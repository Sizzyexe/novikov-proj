

#region 2 –≤–∞—Ä–∏–∞–Ω—Ç




from aiogram import Bot, F, Router
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from database import DatabaseHandler
import logging
import asyncio

logger = logging.getLogger(__name__)
router = Router()

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
WELCOME_PHOTO_ID = "AgACAgIAAxkBAAMeZ9CrWTU8KLnt4cq6c48bj13N1NYAAkz1MRuVfIBKTuWj6376xvwBAAMCAAN4AAM2BA"
FIRST_VIDEO_NOTE_ID = "DQACAgIAAxkBAAICAAFn1AJLZq0I7zukdcmvonQ-TmSupwAC6mUAAvrVoEqV3jOoHxt1OTYE"
SECOND_VIDEO_NOTE_ID = "DQACAgIAAxkBAANMZ9CvF5am7ZO6wcVEwy60ljp-39AAAklrAALdA3hKNnlCz5zdYBw2BA"

# –°–æ—Å—Ç–æ—è–Ω–∏—è
class LessonStates(StatesGroup):
    waiting_for_lesson = State()

# ====================== –û–ë–†–ê–ë–û–¢–ö–ê –°–¢–ê–†–¢–ê ======================
@router.message(Command("start"))
async def cmd_start(message: Message, db: DatabaseHandler):
    user_id = message.from_user.id
    username = message.from_user.first_name
    
    welcome_text = (
        f"–†–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è, {username}!\n\n"
        "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ü–∞–≤–µ–ª –ù–æ–≤–∏–∫–æ–≤, –∏ –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–æ–≤–∞—Ä–Ω–æ–º—É –±–∏–∑–Ω–µ—Å—É –≤ 19 –ª–µ—Ç —è —É—Å–ø–µ–ª:\n\n"
        "‚Ä¢ –ö—É–ø–∏—Ç—å Mercedes C180 –∏ Toyota Mark 2\n"
        "‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–æ–æ—á–µ–Ω—å –º–Ω–æ–≥–æ –Ω–∏—à –∏ –ø–æ–¥–Ω—è—Ç—å –∏—Ö —Å –Ω—É–ª—è –¥–æ –±–æ–ª—å—à–∏—Ö –æ–±–æ—Ä–æ—Ç–æ–≤ –≤ –¥–µ–¥–ª–∞–π–Ω–µ 2-—Ö –Ω–µ–¥–µ–ª—å\n"
        "‚Ä¢ –í—ã–π—Ç–∏ –Ω–∞ –¥–æ—Ö–æ–¥ –≤ 1–º–ª–Ω —Ä—É–±. +++ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ –¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ\n"
        "‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å 2.5–º–ª–Ω –∑–∞ 2 –º–µ—Å—è—Ü–∞ –≤ –Ω–∏—à–µ –∞–π—Ñ–æ–Ω–æ–≤ –ø–æ—Å–ª–µ –∫—Ä–∏–∑–∏—Å–∞\n"
        "‚Ä¢ –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω —Å –∫—Ä–æ—Å—Å–æ–≤–∫–∞–º–∏ –≤ —Ç–æ—Ä–≥–æ–≤–æ–º —Ü–µ–Ω—Ç—Ä–µ (–æ—Ñ—Ñ–ª–∞–π–Ω) –∏ –ø—Ä–æ–¥–∞—Ç—å –µ–≥–æ –±–æ–ª—å—à–µ, —á–µ–º –∑–∞ 1–∫–∫\n"
        "‚Ä¢ –ü–µ—Ä–µ–µ—Ö–∞—Ç—å –≤ –ü–∏—Ç–µ—Ä –∏ —É–µ—Ö–∞—Ç—å\n"
        "‚Ä¢ –°—ä–µ—Ö–∞—Ç—å –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π –µ—â–µ –≤ 17\n"
        "‚Ä¢ –ò –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ –¥—Ä—É–≥–æ–≥–æ\n\n"
        "–ó–¥–µ—Å—å —è –¥–µ–ª—é—Å—å –∑–Ω–∞–Ω–∏—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª–∏–ª–∏ –º–Ω–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å.\n\n"
        "–ù—É —á—Ç–æ, –≥–æ—Ç–æ–≤?"
    )

    try:
        if not await db.user_exists(user_id):
            await db.add_user(user_id, message.from_user.username)

        builder = InlineKeyboardBuilder()
        builder.button(text="–ì–æ—Ç–æ–≤! üöÄ", callback_data="ready")
        await message.answer_photo(
            WELCOME_PHOTO_ID, 
            caption=welcome_text,
            reply_markup=builder.as_markup()
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ: {e}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# ====================== –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–ö–ò "–ì–û–¢–û–í" ======================
@router.callback_query(F.data == "ready")
async def handle_ready(callback: CallbackQuery, state: FSMContext):
    try:
        builder = InlineKeyboardBuilder()
        builder.button(text="–ü–æ–ª—É—á–∏—Ç—å —É—Ä–æ–∫ üìö", callback_data="get_first_lesson")
        
        await callback.message.answer_video_note(
            video_note=FIRST_VIDEO_NOTE_ID,
            reply_markup=builder.as_markup()
        )
        
        await state.set_state(LessonStates.waiting_for_lesson)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        await callback.message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
    finally:
        await callback.answer()

# ====================== –û–¢–ü–†–ê–í–ö–ê –ü–ï–†–í–û–ì–û –£–†–û–ö–ê ======================
@router.callback_query(LessonStates.waiting_for_lesson, F.data == "get_first_lesson")
async def send_first_lesson(callback: CallbackQuery, db: DatabaseHandler, state: FSMContext):
    try:
        intro_text = (
            "–ó–¥–µ—Å—å —Ç—ã —É–∑–Ω–∞–µ—à—å:\n\n"
            "‚Äî –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–¥–∞—é—â–µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: –¢–µ–æ—Ä–∏—è –∏ –º–æ–∏ –ø—Ä–∏–º–µ—Ä—ã\n"
            "‚Äî –ö–∞–∫ —è –ø–∏—à—É –æ—Ñ—Ñ–µ—Ä (—É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ) –∏ –æ–ø–∏—Å–∞–Ω–∏–µ,\n"
            "–∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ—Å—Ç–∞–≤–ª—è—é—Ç —É –∫–ª–∏–µ–Ω—Ç–∞ –≤–æ–ø—Ä–æ—Å–æ–≤\n"
            "‚Äî –ö–∞–∫ –¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–¥–µ–ª—è–µ—Ç—Å—è —Å—Ä–µ–¥–∏ —Ç—ã—Å—è—á\n"
            "‚Äî –ú–æ–∏ —Ñ–∏—à–∫–∏, –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä—ã–º —è —Å—Ç–∞–±–∏–ª—å–Ω–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é\n"
            "–±–æ–ª—å—à–µ 700,000—Ä –µ–∂–µ–º–µ—Å—è—á–Ω–æ\n\n"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="‚úÖ –Ø –∏–∑—É—á–∏–ª —É—Ä–æ–∫", callback_data="lesson_completed")
        
        lesson = await db.get_lesson_content(1)
        if lesson and lesson.get('video_file_id'):
            msg = await callback.message.answer_video(
                video=lesson['video_file_id'],
                caption=intro_text,
                reply_markup=builder.as_markup()
            )
            await state.update_data(lesson_message_id=msg.message_id)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        await callback.message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —É—Ä–æ–∫")
    finally:
        await callback.answer()

# ====================== –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–ö–ò "–ò–ó–£–ß–ò–õ" ======================
@router.callback_query(F.data == "lesson_completed")
async def handle_lesson_completion(callback: CallbackQuery, bot: Bot, state: FSMContext):
    try:
        data = await state.get_data()
        if lesson_message_id := data.get('lesson_message_id'):
            await bot.edit_message_reply_markup(
                chat_id=callback.message.chat.id,
                message_id=lesson_message_id,
                reply_markup=None
            )
        
        # –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ –≤–∏–¥–µ–æ
        await callback.message.answer_video_note(video_note=SECOND_VIDEO_NOTE_ID)
        
        # –ó–∞–ø—É—Å–∫ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏
        asyncio.create_task(continue_after_lesson(callback.message, bot))
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        await callback.message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
    finally:
        await state.clear()
        await callback.answer()

async def continue_after_lesson(message: Message, bot: Bot):
    # –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
    await asyncio.sleep(15)
    await send_congrats_message(message.chat.id, bot)


# ====================== –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –£–†–û–ö–û–í ======================
async def send_lesson(message: Message, lesson_id: int, db: DatabaseHandler):
    try:
        lesson = await db.get_lesson_content(lesson_id)
        if not lesson:
            await message.answer("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫—É—Ä—Å!")
            return

        if lesson.get('video_file_id'):
            await message.answer_video(
                video=lesson['video_file_id'],
                caption=None,
                reply_markup=None
            )
        else:
            await message.answer(
                text=lesson['content'],
                reply_markup=None
            )

        if lesson_id == 1:
            asyncio.create_task(send_congrats_message(message.chat.id, message.bot))
        elif lesson_id == 2:
            asyncio.create_task(send_second_lesson_gift(message.chat.id, message.bot))
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É—Ä–æ–∫–∞: {e}")
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É—Ä–æ–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# ====================== –ü–û–°–õ–ï–î–£–Æ–©–ò–ï –°–û–û–ë–©–ï–ù–ò–Ø ======================
async def send_congrats_message(chat_id: int, bot):
    await asyncio.sleep(15)#120sec
    try:
        text = (
    "–ò–≥–æ—Ä—å –ø–æ–ø–∞–ª –Ω–∞ –º–æ—é –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –Ω–µ –∏–º–µ—è –Ω–∏–∫–∞–∫–∏—Ö –∑–Ω–∞–Ω–∏–π –æ —Ç–æ–≤–∞—Ä–∫–µ. "
    "–ù–∞—á–∞–ª —Å –º–æ–∏—Ö –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤ –∏ –º–µ–Ω—å—à–µ —á–µ–º –∑–∞ 2 –Ω–µ–¥–µ–ª–∏ —É—Å–ø–µ–ª –∏–∑—É—á–∏—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, "
    "–∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–∫—É–ø–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ. –ö—Ä—É—Ç–æ?\n\n"
    "–ê —á—Ç–æ, –µ—Å–ª–∏ —è —Å–∫–∞–∂—É, —á—Ç–æ —É–∂–µ —á–µ—Ä–µ–∑ 2 –º–µ—Å—è—Ü–∞ –æ–Ω –∑–∞—Ä–∞–±–æ—Ç–∞–ª 750,000 —Ä—É–±–ª–µ–π?\n\n"
    "–¢–µ–ø–µ—Ä—å —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –µ—Å—Ç—å –∏ —É —Ç–µ–±—è! –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –∑–∞–±–∏—Ä–∞–π –ø–æ–¥–∞—Ä–æ–∫ üéÅ"
)
        builder = InlineKeyboardBuilder()
        builder.button(text="–•–æ—á—É –∏–∑—É—á–∞—Ç—å –¥–∞–ª—å—à–µ –∏ –∑–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫!", callback_data="get_gift")
        await bot.send_message(chat_id, text, reply_markup=builder.as_markup())
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è: {e}")

async def send_second_lesson_gift(chat_id: int, bot):
    try:
        await asyncio.sleep(120)
        text1 = (
            "–ò–∑—É—á–∏–ª? –ö—Ä–∞—Å–∞–≤—á–∏–∫! –¢—ã —É–∑–Ω–∞–ª, –∫–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Ç–æ–≤–∞—Ä–∫–µ –º–Ω–æ–≥–æ, –ø—Ä–∏–±—ã–ª—å–Ω–æ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ!\n\n"
            "–í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ —Ç—ã –ø–æ–π–º–µ—à—å, –∫–∞–∫—É—é —Ü–µ–Ω—É —Å—Ç–∞–≤–∏—Ç—å –Ω–∞ —Å–≤–æ–∏ —Ç–æ–≤–∞—Ä—ã —á—Ç–æ–±—ã –∫–ª–∏–µ–Ω—Ç—ã –≤—ã–±–∏—Ä–∞–ª–∏ —Ç–µ–±—è, –∞ —Ç—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–ª –µ—â–µ –±–æ–ª—å—à–µ!"
        )
        await bot.send_message(chat_id, text1)

        await asyncio.sleep(60)
        text2 = (
            "–ü–æ–¥–∞—Ä–æ–∫ —É–∂–µ —Ä—è–¥–æ–º! –¢—ã —É–∑–Ω–∞–ª, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ç–∞–≤–∏—Ç—å —Ü–µ–Ω—ã, —á—Ç–æ–±—ã —Ç—ã –≤—ã–¥–µ–ª—è–ª—Å—è —Å—Ä–µ–¥–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤, –ø—Ä–∏ —ç—Ç–æ–º —Å–æ—Ö—Ä–∞–Ω—è—è –≤—ã—Å–æ–∫—É—é –º–∞—Ä–∂—É\n\n"
            "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –∏–∑—É—á–∏—à—å —É—Ä–æ–∫ –¥–æ –∫–æ–Ω—Ü–∞, –Ω–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É üëá"
        )
        builder = InlineKeyboardBuilder()
        builder.button(text="–Ø –≤—Å–µ –∏–∑—É—á–∏–ª, –∑–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫! üéÅ", callback_data="get_gift")
        await bot.send_message(chat_id, text2, reply_markup=builder.as_markup())
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞: {e}")

# ====================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–õ–Ø –î–†–£–ì–ò–• –ö–ù–û–ü–û–ö ======================
@router.callback_query(F.data == "get_gift")
async def get_gift_handler(callback: CallbackQuery):
    try:
        await send_gift_message(callback.message.chat.id, callback.bot)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    await callback.answer()

async def send_gift_message(chat_id: int, bot):
    try:
        text = (
    "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –Ø –¥–∞—Ä—é —Ç–µ–±–µ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–∞—Ä—å–µ—Ä–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –≥–¥–µ —è —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ:\n\n"
    "‚Äî –í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä —Å –≤—ã—Å–æ–∫–æ–π –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –≤–ª–æ–∂–µ–Ω–∏—è–º–∏\n"
    "‚Äî –î–∞–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞–±–æ—Ç–∞—é —É–∂–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ª–µ—Ç\n"
    "‚Äî –†–∞—Å—Å–∫–∞–∂—É –∏ –ø–æ–∫–∞–∂—É, –∫–∞–∫ –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å —Å–≤–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏ –ø–ª–∞—Ç–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã)\n"
    "‚Äî –ö–∞–∫ –æ–∫—É–ø–∏—Ç—å –≤—Å–µ –≤–ª–æ–∂–µ–Ω–∏—è –º–µ–Ω—å—à–µ —á–µ–º –∑–∞ –º–µ—Å—è—Ü\n"
    "‚Äî –ù—É –∏ —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ ‚Äî –∫–∞–∫ –≤—ã–π—Ç–∏ –Ω–∞ –¥–æ—Ö–æ–¥ 150,000 –∏ –±–æ–ª—å—à–µ!\n\n"
    "–°–∫–æ—Ä–µ–µ –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, –∑–∞–ø–æ–ª–Ω—è–π –∞–Ω–∫–µ—Ç—É, –∏ —è —Å–≤—è–∂—É—Å—å —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!"
)
        gift_photo_id = "AgACAgIAAxkBAAIBI2fS_nRKZeYyaV0nDVyEQVEO91B5AAKp8jEbEVCZSkZsYHZML8jgAQADAgADeQADNgQ"
        
        builder = InlineKeyboardBuilder()
        builder.row(InlineKeyboardButton(text="üì© –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É", url="https://forms.gle/LMYPtVTsmjfg5aQ38"))
        builder.row(InlineKeyboardButton(text="–°–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª–Ω—ã–π –∫—É—Ä—Å üìö", callback_data="view_full_course"))
        builder.row(InlineKeyboardButton(text="üì¢ –°–º–æ—Ç—Ä–µ—Ç—å –∫–µ–π—Å—ã", callback_data="view_cases"))
        
        await bot.send_photo(
            chat_id=chat_id,
            photo=gift_photo_id,
            caption=text,
            reply_markup=builder.as_markup()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# ====================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–ï–ô–°–û–í –ò –ö–£–†–°–ê ======================
@router.callback_query(F.data == "view_cases")
async def show_first_case(callback: CallbackQuery):
    await show_case(callback, case_index=0)

@router.callback_query(F.data.startswith("next_case_"))
async def show_next_case(callback: CallbackQuery):
    case_index = int(callback.data.split("_")[-1])
    await show_case(callback, case_index)

async def show_case(callback: CallbackQuery, case_index: int):
    if case_index >= len(CASES):
        case_index = 0
        
    case = CASES[case_index]
    builder = InlineKeyboardBuilder()
    
    for btn in case['buttons']:
        if 'url' in btn:
            builder.row(InlineKeyboardButton(text=btn['text'], url=btn['url']))
        else:
            builder.row(InlineKeyboardButton(text=btn['text'], callback_data=btn['callback_data']))
    
    if case_index == 1:
        await callback.message.answer_photo(
            photo=case['photo_id'],
            caption=case['text'],
            reply_markup=builder.as_markup()
        )
        asyncio.create_task(send_delayed_video(callback.message.chat.id, callback.bot, case['video_id']))
    else:
        await callback.message.answer_photo(
            photo=case['photo_id'],
            caption=case['text'],
            reply_markup=builder.as_markup()
        )
    
    await callback.answer()

async def send_delayed_video(chat_id: int, bot, video_id: str):
    await asyncio.sleep(5)
    try:
        builder = InlineKeyboardBuilder()
        builder.row(InlineKeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –µ—â—ë', callback_data='next_case_2'))
        builder.row(InlineKeyboardButton(text='–°—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º', url='https://t.me/Hogops'))
        await bot.send_video(
            chat_id=chat_id,
            video=video_id,
            caption="üìπ –í–∏–¥–µ–æ-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:",
            reply_markup=builder.as_markup()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ: {e}")

@router.callback_query(F.data == "view_full_course")
async def show_full_course(callback: CallbackQuery):
    course_photo_id = "AgACAgIAAxkBAAIDbWfdMwTQ3mFtMcK0UvPY8oda2w-wAAKa7zEbSjboSgvdHfjhej6WAQADAgADeQADNgQ"
    text = (
    "üéì <b>–û–±—É—á–µ–Ω–∏–µ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –∏–∑—É—á–∏—Ç—å –≤—Å–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ!</b>\n\n"
    "–ë–µ—Ä–∏ –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω, –≤ –∫–æ—Ç–æ—Ä–æ–º —è –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞–∑–æ–±—Ä–∞–ª –∫–∞–∂–¥—ã–π —à–∞–≥, –∑–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã –ª–∏—á–Ω–æ –º–Ω–µ –≤ —á–∞—Ç–µ "
    "–∏ –¥–≤–∏–≥–∞–π—Å—è –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–º —Ç–µ–º–ø–µ, –ø—Ä–∏–±–ª–∏–∂–∞—è—Å—å –∫ –∑–∞–≤–µ—Ç–Ω—ã–º —Ü–µ–ª—è–º! ‚Äî <a href='https://clck.ru/3J56Zj'>—É–∑–Ω–∞—Ç—å, —á—Ç–æ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ</a>\n\n"
    
    "<b>–ö–æ–º—É –ø–æ–¥–æ–π–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–π –∫—É—Ä—Å:</b>\n\n"
    "‚Äî –ù–æ–≤–∏—á–æ–∫ –≤ –æ–Ω–ª–∞–π–Ω –∑–∞—Ä–∞–±–æ—Ç–∫–µ, —Å—Ç—É–¥–µ–Ω—Ç –±–µ–∑ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞\n"
    "<i>–†–µ–∑—É–ª—å—Ç–∞—Ç:</i> –î–µ–ª–∞–µ—à—å —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ 100 —Ç—ã—Å—è—á –∏ –±–æ–ª—å—à–µ –Ω–∞ —Ç–æ–≤–∞—Ä–∫–µ\n\n"
    "‚Äî –†–∞–±–æ—Ç–∞–µ—à—å –≤ –Ω–∞–π–º–µ –∏ –º–µ—á—Ç–∞–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ —Å–µ–±—è\n"
    "<i>–†–µ–∑—É–ª—å—Ç–∞—Ç:</i> –£–≤–æ–ª—å–Ω—è–µ—à—å—Å—è —Å –Ω–µ–ª—é–±–∏–º–æ–π —Ä–∞–±–æ—Ç—ã, –ø–æ—Å–≤—è—â–∞–µ—à—å —Å–µ–±—è –¥–æ—Ö–æ–¥–Ω–æ–º—É –¥–µ–ª—É\n\n"
    "‚Äî –£–∂–µ –∏–º–µ–µ—à—å –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ, —É–ø–µ—Ä—Å—è –≤ –ø–æ—Ç–æ–ª–æ–∫\n"
    "<i>–†–µ–∑—É–ª—å—Ç–∞—Ç:</i> –ó–∞ –ø–µ—Ä–≤—ã–µ 2 –º–µ—Å—è—Ü–∞ –≤—ã–π–¥–µ—à—å –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏\n\n"
    
    "üí∏ <b>–¶–µ–Ω–∞:</b>\n"
    "<s>20.000‚ÇΩ</s> <b>9.990‚ÇΩ</b>\n\n"
    
    "üëâ<b><a href='https://clck.ru/3J56Zj'>–û–ó–ù–ê–ö–û–ú–ò–¢–¨–°–Ø –° –ü–û–õ–ù–û–ô –ü–†–û–ì–†–ê–ú–ú–û–ô –û–ë–£–ß–ï–ù–ò–Ø</a></b>\n\n"
    
    "–° –ø–æ–º–æ—â—å—é –º–æ–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å–≤—ã—à–µ 70 —á–µ–ª–æ–≤–µ–∫ —Å–º–æ–≥–ª–∏ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–±—ã–ª—å–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã ‚Äî <a href='https://clck.ru/3J56bU'>–æ—Ç–∑—ã–≤—ã —É—á–µ–Ω–∏–∫–æ–≤</a>\n\n"
    
    "üõí <b>–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏:</b> https://t.me/Hogops"
)
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–ó–∞–±—Ä–∞—Ç—å –ø–æ–ª–Ω—ã–π –∫—É—Ä—Å! üöÄ", url="https://t.me/Hogops"))
    
    await callback.message.answer_photo(
        photo=course_photo_id,
        caption=text,
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    await callback.answer()

# ====================== –î–ê–ù–ù–´–ï –ö–ï–ô–°–û–í ======================
CASES = [
    {
        'photo_id': 'AgACAgIAAxkBAAIBL2fTAm2eVTWvO2A8p97uATsJ7VexAALB8jEbEVCZSjzl_kgPbcHNAQADAgADeAADNgQ',
        'text': (
            "–ö–µ–π—Å –ò–≥–æ—Ä—è\n\n"
            "–¢–æ—á–∫–∞ –ê: 0 —Ä—É–±–ª–µ–π\n"
            "–¢–æ—á–∫–∞ –ë: 750,000 —Ä—É–±–ª–µ–π\n\n"
            "–ò–≥–æ—Ä—å ‚Äî —Ç–µ–ø–µ—Ä—å –¥–ª—è –º–µ–Ω—è –±–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫, —Å –∫–æ—Ç–æ—Ä—ã–º —è –ø—Ä–æ–≤–æ–∂—É –ø–æ—á—Ç–∏ —Å–≤–æ–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, "
            "—Ä–∞–Ω–µ–µ –±—ã–ª —É –º–µ–Ω—è –Ω–∞ –ø–æ—Ç–æ–∫–µ.\n\n"
            "–í –ø–µ—Ä–≤—ã–µ 2 –Ω–µ–¥–µ–ª–∏ –æ–Ω –æ–∫—É–ø–∏–ª –ª–∏—á–Ω—É—é —Ä–∞–±–æ—Ç—É, –∞ –∑–∞ 2 –º–µ—Å—è—Ü–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–ª 750,000—Ä.\n\n"
            "–ß—Ç–æ–± –≤—ã –ø–æ–Ω–∏–º–∞–ª–∏, –∫–æ–≥–¥–∞ –ò–≥–æ—Ä—å –∑–∞—Ö–æ–¥–∏–ª –∫–æ –º–Ω–µ –Ω–∞ –ª–∏—á–Ω—É—é —Ä–∞–±–æ—Ç—É ‚Äî –æ–Ω –¥–∞–∂–µ –Ω–µ –∑–Ω–∞–ª –∫–∞–∫ "
            "–æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –∞–≤–∏—Ç–æ."
        ),
        'buttons': [
            {'text': '–°–º–æ—Ç—Ä–µ—Ç—å –µ—â—ë', 'callback_data': 'next_case_1'},
            {'text': '–°—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º', 'url': 'https://t.me/Hogops'}
        ]
    },
    {
        'photo_id': 'AgACAgIAAxkBAAIBMWfTAnZsw7Z1rPax1harGHFKQw0DAALD8jEbEVCZSjVZmW3bdpq_AQADAgADeQADNgQ',
        'text': (
            "–ö–µ–π—Å –§–µ–¥–∏\n\n"
            "–¢–æ—á–∫–∞ –ê: 60,000 —Ä—É–±–ª–µ–π\n"
            "–¢–æ—á–∫–∞ –ë: 300,000 —Ä—É–±–ª–µ–π\n\n"
            "–û–î–ò–ù –ò–ó –õ–£–ß–®–ò–• –£–ß–ï–ù–ò–ö–û–í\n\n"
            "–°–ø—Ä–æ—à—É –ª–∏—à—å: –ö–∞–∫ –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ 300,000—Ä –≤ –º–µ—Å—è—Ü –Ω–∞ —Ç–æ–≤–∞—Ä–Ω–æ–º –±–∏–∑–Ω–µ—Å–µ –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö "
            "120,000-150,000—Ä –≤ –º–µ—Å—è—Ü –∏–¥—É—Ç —Å –ê–≤–∏—Ç–æ?\n\n"
            "–†–∞–±–æ—Ç–∞–µ—à—å –∏ –≤–∫–ª–∞–¥—ã–≤–∞–µ—à—å—Å—è –≤–æ –≤—Ä–µ–º—è –º–æ–µ–≥–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–∞ ‚Äî –ø–æ–ª—É—á–∞–µ—à—å —Ç–æ–ª—å–∫–æ —Ç–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç."
        ),
        'video_id': 'BAACAgIAAxkBAAIBNWfTAzl87u8eawLzVmdDWTcB88NrAAKOcwACEVCZSu4bVwLtzwABaTYE',
        'buttons': [
            {'text': '–°–º–æ—Ç—Ä–µ—Ç—å –µ—â—ë', 'callback_data': 'next_case_2'},
            {'text': '–°—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º', 'url': 'https://t.me/Hogops'}
        ]
    },
    {
        'photo_id': 'AgACAgIAAxkBAAIBM2fTAnrcKrJ9jwKGRQVmMkeXsMckAALE8jEbEVCZSrd29h501v3gAQADAgADeAADNgQ',
        'text': (
            "–ö–µ–π—Å –°–∞—à–∏\n\n"
            "–¢–æ—á–∫–∞ –ê: 55,000 —Ä—É–±–ª–µ–π\n"
            "–¢–æ—á–∫–∞ –ë: 120,000 —Ä—É–±–ª–µ–π\n\n"
            "–ü—Ä–∏—à–µ–ª —Å –¥–æ—Ö–æ–¥–æ–º 50-60–∫\n"
            "–°–µ–π—á–∞—Å –¥–µ–ª–∞–µ—Ç 120,000—Ä+\n\n"
            "–¶–µ–ª—å –Ω–∞ –Ω–∞—Å—Ç–∞–≤–Ω–∏—Ç–µ–ª—å—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–∏–ª –∑–∞ –º–µ—Å—è—Ü)"
        ),
        'buttons': [
            {'text': '–Ø –≥–æ—Ç–æ–≤, –ø–æ–≥–Ω–∞–ª–∏!', 'callback_data': 'view_full_course'}
        ]
    }
]

@router.callback_query(F.data == "menu")
async def menu_handler(callback: CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.button(text="–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ üîÑ", callback_data="restart_course")
    builder.button(text="–í—ã–±—Ä–∞—Ç—å —É—Ä–æ–∫ üìö", callback_data="select_lesson")
    await callback.message.answer("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=builder.as_markup())

@router.callback_query(F.data == "restart_course")
async def restart_course(callback: CallbackQuery, db: DatabaseHandler):
    user_id = callback.from_user.id
    await db.update_lesson(user_id, 1)
    await send_lesson(callback.message, 1, db)
    await callback.answer()
#region 2 –≤–∞—Ä–∏–∞–Ω—Ç





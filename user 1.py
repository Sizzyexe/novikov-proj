# from aiogram import F, Router
# from aiogram.types import Message, CallbackQuery, InlineKeyboardButton
# from aiogram.filters import Command
# from aiogram.utils.keyboard import InlineKeyboardBuilder
# from database import DatabaseHandler
# import logging
# import asyncio

# logger = logging.getLogger(__name__)
# router = Router()

# WELCOME_PHOTO_ID = "AgACAgIAAxkBAAMeZ9CrWTU8KLnt4cq6c48bj13N1NYAAkz1MRuVfIBKTuWj6376xvwBAAMCAAN4AAM2BA"
# VIDEO_NOTE_ID = "DQACAgIAAxkBAANMZ9CvF5am7ZO6wcVEwy60ljp-39AAAklrAALdA3hKNnlCz5zdYBw2BA"

# # ====================== –û–ë–†–ê–ë–û–¢–ö–ê –°–¢–ê–†–¢–ê ======================
# async def send_igor_message(chat_id: int, bot):
#     await asyncio.sleep(5)
#     try:
#         text = (
#             "–ò–≥–æ—Ä—å –º–µ–Ω—å—à–µ —á–µ–º –∑–∞ 2 –Ω–µ–¥–µ–ª–∏ —É—Å–ø–µ–ª –∏–∑—É—á–∏—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –º–æ–µ–º –∫—É—Ä—Å–µ, "
#             "–∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–∫—É–ø–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ. –ö—Ä—É—Ç–æ?\n\n"
#             "–ê —á—Ç–æ, –µ—Å–ª–∏ —è —Å–∫–∞–∂—É, —á—Ç–æ —É–∂–µ —á–µ—Ä–µ–∑ 2 –º–µ—Å—è—Ü–∞ –æ–Ω –∑–∞—Ä–∞–±–æ—Ç–∞–ª 750,000 —Ä—É–±–ª–µ–π?\n\n"
#             "–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –Ω–∞—á–∏–Ω–∞–π –∏–∑—É—á–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–±–∏–ª—å–Ω–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–∏–º —É—á–µ–Ω–∏–∫–∞–º"
#         )
#         builder = InlineKeyboardBuilder()
#         builder.button(text="–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫", callback_data="start_lesson")
#         await bot.send_message(chat_id, text, reply_markup=builder.as_markup())
#     except Exception as e:
#         logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –ò–≥–æ—Ä–µ: {e}")

# async def send_delayed_content(chat_id: int, bot):
#     try:
#         await asyncio.sleep(10)
#         await bot.send_video_note(chat_id, video_note=VIDEO_NOTE_ID)
#         await send_igor_message(chat_id, bot)
#     except Exception as e:
#         logger.error(f"–û—à–∏–±–∫–∞ —Ü–µ–ø–æ—á–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")

# @router.message(Command("start"))
# async def cmd_start(message: Message, db: DatabaseHandler):
#     user_id = message.from_user.id
#     username = message.from_user.first_name
    
#     welcome_text = (
#         f"–†–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è, {username}!\n"
#         "–ó–¥–µ—Å—å —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
#         "‚Äî –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–¥–∞—é—â–µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: –¢–µ–æ—Ä–∏—è –∏ –º–æ–∏ –ø—Ä–∏–º–µ—Ä—ã\n"
#         "‚Äî –ö–∞–∫ —è –ø–∏—à—É –æ—Ñ—Ñ–µ—Ä (—É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ) –∏ –æ–ø–∏—Å–∞–Ω–∏–µ,\n"
#         "–∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ—Å—Ç–∞–≤–ª—è—é—Ç —É –∫–ª–∏–µ–Ω—Ç–∞ –≤–æ–ø—Ä–æ—Å–æ–≤\n" 
#         "‚Äî –ö–∞–∫ –¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–¥–µ–ª—è–µ—Ç—Å—è —Å—Ä–µ–¥–∏ —Ç—ã—Å—è—á\n"
#         "‚Äî –ú–æ–∏ —Ñ–∏—à–∫–∏, –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä—ã–º —è —Å—Ç–∞–±–∏–ª—å–Ω–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é\n"
#         "–±–æ–ª—å—à–µ 700,000—Ä –µ–∂–µ–º–µ—Å—è—á–Ω–æ\n"
#         "–ê —Ç–∞–∫ –∂–µ —Å–º–æ–∂–µ—à—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º –ø–æ—à–∞–≥–æ–≤—ã–º –ø–ª–∞–Ω–æ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–±—ã–ª—å–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞.\n"
#         "–î–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π –¥–æ –∫–æ–Ω—Ü–∞, –≤–ø–∏—Ç—ã–≤–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —É–∑–Ω–∞–π, –∫–∞–∫–æ–π –ø–æ–¥–∞—Ä–æ–∫ –∂–¥–µ—Ç —Ç–µ–±—è –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è.\n\n"
#         "–ù—É —á—Ç–æ, –≥–æ—Ç–æ–≤?"
#     )

#     try:
#         if not await db.user_exists(user_id):
#             await db.add_user(user_id, message.from_user.username)

#         await message.answer_photo(WELCOME_PHOTO_ID, caption=welcome_text)
#         asyncio.create_task(send_delayed_content(message.chat.id, message.bot))

#     except Exception as e:
#         logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ: {e}")
#         await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# # ====================== –û–ë–†–ê–ë–û–¢–ö–ê –£–†–û–ö–û–í ======================
# async def send_congrats_message(chat_id: int, bot):
#     await asyncio.sleep(15)#120sec
#     try:
#         text = (
#             "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –ø–æ–ª—É—á–∏–ª 1 –∏–∑ 27 —É—Ä–æ–∫–æ–≤ –∏–∑ –º–æ–µ–≥–æ\n–ø–æ—à–∞–≥–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∞\n\n"
#             "–î–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π –¥–æ –∫–æ–Ω—Ü–∞ –∏ –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, –ø–æ–¥–∞—Ä–æ–∫ —É–∂–µ –±–ª–∏–∑–∫–æ\n\n"
#         )
#         builder = InlineKeyboardBuilder()
#         builder.button(text="–•–æ—á—É –∏–∑—É—á–∞—Ç—å –¥–∞–ª—å—à–µ –∏ –∑–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫!", callback_data="get_gift")
#         await bot.send_message(chat_id, text, reply_markup=builder.as_markup())
#     except Exception as e:
#         logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è: {e}")

# async def send_second_lesson_gift(chat_id: int, bot):
#     try:
#         await asyncio.sleep(1)#120sec
#         text1 = (
#             "–ò–∑—É—á–∏–ª? –ö—Ä–∞—Å–∞–≤—á–∏–∫! –¢—ã —É–∑–Ω–∞–ª, –∫–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Ç–æ–≤–∞—Ä–∫–µ –º–Ω–æ–≥–æ, –ø—Ä–∏–±—ã–ª—å–Ω–æ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ!\n\n"
#             "–í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ —Ç—ã –ø–æ–π–º–µ—à—å, –∫–∞–∫—É—é —Ü–µ–Ω—É —Å—Ç–∞–≤–∏—Ç—å –Ω–∞ —Å–≤–æ–∏ —Ç–æ–≤–∞—Ä—ã —á—Ç–æ–±—ã –∫–ª–∏–µ–Ω—Ç—ã –≤—ã–±–∏—Ä–∞–ª–∏ —Ç–µ–±—è, –∞ —Ç—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–ª –µ—â–µ –±–æ–ª—å—à–µ!"
#         )
#         await bot.send_message(chat_id, text1)

#         await asyncio.sleep(1)#60sec
#         text2 = (
#             "–ü–æ–¥–∞—Ä–æ–∫ —É–∂–µ —Ä—è–¥–æ–º! –¢—ã —É–∑–Ω–∞–ª, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ç–∞–≤–∏—Ç—å —Ü–µ–Ω—ã, —á—Ç–æ–±—ã —Ç—ã –≤—ã–¥–µ–ª—è–ª—Å—è —Å—Ä–µ–¥–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤, –ø—Ä–∏ —ç—Ç–æ–º —Å–æ—Ö—Ä–∞–Ω—è—è –≤—ã—Å–æ–∫—É—é –º–∞—Ä–∂—É\n\n"
#             "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –∏–∑—É—á–∏—à—å —É—Ä–æ–∫ –¥–æ –∫–æ–Ω—Ü–∞, –Ω–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É üëá"
#         )
#         builder = InlineKeyboardBuilder()
#         builder.button(text="–Ø –≤—Å–µ –∏–∑—É—á–∏–ª, –∑–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫! üéÅ", callback_data="get_gift")
#         await bot.send_message(chat_id, text2, reply_markup=builder.as_markup())
#     except Exception as e:
#         logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞: {e}")

# async def send_gift_message(chat_id: int, bot):
#     try:
#         text = (
#             "üéÅ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≤–∏–¥–µ–ª –º–∞–ª—É—é —á–∞—Å—Ç—å –∏–∑ –º–æ–µ–≥–æ –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∞ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –ø—Ä–∏–±—ã–ª—å–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞ –∞–≤–∏—Ç–æ, "
#             "–∫–æ—Ç–æ—Ä–∞—è —É–∂–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç –º–æ–∏–º —É—á–µ–Ω–∏–∫–∞–º –±–æ–ª—å—à–µ 150 —Ç—ã—Å—è—á –µ–∂–µ–º–µ—Å—è—á–Ω–æ!\n\n"
#             "–Ø –ª—é–±–ª—é –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∏–¥—É—Ç –∫ —Å–≤–æ–∏–º —Ü–µ–ª—è–º, –ø–æ—ç—Ç–æ–º—É –¥–∞—Ä—é —Ç–µ–±–µ —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n"
#             "–ù–æ, –ø–æ–º–∏–º–æ —ç—Ç–æ–≥–æ, –µ—Å–ª–∏ —Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≥–æ—Ç–æ–≤ —Ö–µ—Ä–∞—á–∏—Ç—å, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —É—Ä–æ–∫–∏ –∏ –∑–∞–±—ã—Ç—å, "
#             "—è –¥–∞—Ä—é —Ç–µ–±–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –æ—Ç –º–µ–Ω—è, –≥–¥–µ —è –ø–æ –ø–æ–ª–æ—á–∫–∞–º —Ä–∞–∑–±–µ—Ä—É —Ç–≤–æ—é —Å–∏—Ç—É–∞—Ü–∏—é –∏ –ø–æ–¥—Å–∫–∞–∂—É, "
#             "–∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –∑–∞–±—Ä–∞—Ç—å —Å–≤–æ–∏ 150-200–∫ —Å —Ç–æ–≤–∞—Ä–∫–∏!\n\n"
#             "–°–∫–æ—Ä–µ–µ –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!"
#         )
#         gift_photo_id = "AgACAgIAAxkBAAIBI2fS_nRKZeYyaV0nDVyEQVEO91B5AAKp8jEbEVCZSkZsYHZML8jgAQADAgADeQADNgQ"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à FileID
        
#         builder = InlineKeyboardBuilder()
#         builder.row(InlineKeyboardButton(text="üì© –ù–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ", url="https://t.me/Hogops"))
#         builder.row(InlineKeyboardButton(text="–°–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª–Ω—ã–π –∫—É—Ä—Å üìö", callback_data="view_full_course"))
#         builder.row(InlineKeyboardButton(text="üì¢ –°–º–æ—Ç—Ä–µ—Ç—å –∫–µ–π—Å—ã", callback_data="view_cases"))
        
#         await bot.send_photo(
#             chat_id=chat_id,
#             photo=gift_photo_id,
#             caption=text,
#             reply_markup=builder.as_markup()
#         )
#     except Exception as e:
#         logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# async def send_lesson(message: Message, lesson_id: int, db: DatabaseHandler):
#     try:
#         lesson = await db.get_lesson_content(lesson_id)
#         if not lesson:
#             await message.answer("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫—É—Ä—Å!")
#             return

#         reply_markup = None if lesson_id in [1, 2] else get_lesson_keyboard(lesson_id, await db.get_total_lessons())

#         if lesson.get('video_file_id'):
#             await message.answer_video(
#                 video=lesson['video_file_id'],
#                 caption=lesson['content'],
#                 reply_markup=reply_markup
#             )
#         else:
#             await message.answer(
#                 text=lesson['content'],
#                 reply_markup=reply_markup
#             )

#         if lesson_id == 1:
#             asyncio.create_task(send_congrats_message(message.chat.id, message.bot))
#         elif lesson_id == 2:
#             asyncio.create_task(send_second_lesson_gift(message.chat.id, message.bot))
#     except Exception as e:
#         logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É—Ä–æ–∫–∞: {e}")
#         await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É—Ä–æ–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# def get_lesson_keyboard(current_lesson: int, total_lessons: int):
#     builder = InlineKeyboardBuilder()
#     builder.button(text="–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫ ‚û°Ô∏è", callback_data="next_lesson")
#     builder.button(text="–ú–µ–Ω—é üè†", callback_data="menu")
#     return builder.adjust(1).as_markup()

# # ====================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–ù–û–ü–û–ö ======================
# @router.callback_query(F.data == "start_lesson")
# async def start_lesson(callback: CallbackQuery, db: DatabaseHandler):
#     user_id = callback.from_user.id
#     await db.update_lesson(user_id, 1)
    
#     # –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ —É—Ä–æ–∫–æ–º
#     intro_text = (
#         "–í–æ—Ç —É—Ä–æ–∫ –∏–∑ –º–æ–µ–≥–æ –∫—É—Ä—Å–∞ \"–°–æ—Ç–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä–∫–µ\", –≥–¥–µ —è –¥–∞—é –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—é –ø–æ –≤—ã—Ö–æ–¥—É "
#         "–Ω–∞ –∑–∞–≤–µ—Ç–Ω—ã–µ 100,000—Ä –ø–æ —à–∞–≥–∞–º –Ω–∞ —Ç–æ–≤–∞—Ä–Ω–æ–º –±–∏–∑–Ω–µ—Å–µ. –ë–ª–∞–≥–æ–¥–∞—Ä—è —ç—Ç–∏–º –∑–Ω–∞–Ω–∏—è–º –º–æ–∏ —É—á–µ–Ω–∏–∫–∏ "
#         "—É–∂–µ –≤ –ø–µ—Ä–≤—ã–π –º–µ—Å—è—Ü –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞—é—Ç –ø–ª–∞–Ω–∫—É 150,000 —Ç—ã—Å—è—á, –∞ —è –¥–∞—Ä—é —Ç–µ–±–µ —ç—Ç–æ –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ.\n\n"
#         "–ë–µ—Ä–∏ –∏ –ø—Ä–∏–º–µ–Ω—è–πüëá"
#     )
#     await callback.message.answer(intro_text)
    
#     # –ó–∞–¥–µ—Ä–∂–∫–∞ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —É—Ä–æ–∫–∞
#     await asyncio.sleep(5)
#     await send_lesson(callback.message, 1, db)
#     await callback.answer()

# @router.callback_query(F.data == "next_lesson")
# async def next_lesson(callback: CallbackQuery, db: DatabaseHandler):
#     user_id = callback.from_user.id
#     try:
#         current_lesson = await db.get_current_lesson(user_id)
#         total_lessons = await db.get_total_lessons()
        
#         new_lesson = current_lesson + 1
#         if new_lesson > total_lessons:
#             new_lesson = 1

#         await db.update_lesson(user_id, new_lesson)
#         await send_lesson(callback.message, new_lesson, db)
#         await callback.answer()
#     except Exception as e:
#         logger.error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —É—Ä–æ–∫—É: {e}")
#         await callback.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# @router.callback_query(F.data == "get_gift")
# async def get_gift_handler(callback: CallbackQuery):
#     await send_gift_message(callback.message.chat.id, callback.bot)
#     await callback.answer()

# # ====================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–ï–ô–°–û–í ======================
# async def send_delayed_video(chat_id: int, bot, video_id: str):
#     await asyncio.sleep(5)
#     try:
#         builder = InlineKeyboardBuilder()
#         builder.row(InlineKeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –µ—â—ë', callback_data='next_case_2'))
#         builder.row(InlineKeyboardButton(text='–°—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º', url='https://t.me/Hogops'))
#         await bot.send_video(
#             chat_id=chat_id,
#             video=video_id,
#             caption="üìπ –í–∏–¥–µ–æ-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:",
#             reply_markup=builder.as_markup()
#         )
#     except Exception as e:
#         logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ: {e}")

# @router.callback_query(F.data == "view_cases")
# async def show_first_case(callback: CallbackQuery):
#     await show_case(callback, case_index=0)

# @router.callback_query(F.data.startswith("next_case_"))
# async def show_next_case(callback: CallbackQuery):
#     case_index = int(callback.data.split("_")[-1])
#     await show_case(callback, case_index)

# async def show_case(callback: CallbackQuery, case_index: int):
#     if case_index >= len(CASES):
#         case_index = 0
        
#     case = CASES[case_index]
#     builder = InlineKeyboardBuilder()
    
#     for btn in case['buttons']:
#         if 'url' in btn:
#             builder.row(InlineKeyboardButton(text=btn['text'], url=btn['url']))
#         else:
#             builder.row(InlineKeyboardButton(text=btn['text'], callback_data=btn['callback_data']))
    
#     if case_index == 1:
#         await callback.message.answer_photo(
#             photo=case['photo_id'],
#             caption=case['text'],
#             reply_markup=builder.as_markup()
#         )
#         asyncio.create_task(send_delayed_video(callback.message.chat.id, callback.bot, case['video_id']))
#     else:
#         await callback.message.answer_photo(
#             photo=case['photo_id'],
#             caption=case['text'],
#             reply_markup=builder.as_markup()
#         )
    
#     await callback.answer()

# @router.callback_query(F.data == "view_full_course")
# async def show_full_course(callback: CallbackQuery):
#     course_photo_id = "AgACAgIAAxkBAAIBLWfS__9-8lt1OVIBS3RqUerTrML3AAKx8jEbEVCZSq88JW8AAeiKIQEAAwIAA3kAAzYE"  # –í–∞—à FileID
#     text = (
#         "üéì <b>–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –∏–∑—É—á–∏—Ç—å –≤—Å–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ!</b>\n\n"
#         "–ë–µ—Ä–∏ –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω, –ø—Ä–∏–º–µ–Ω—è–π –¥–µ–π—Å—Ç–≤–∏—è –∏ –¥–≤–∏–≥–∞–π—Å—è –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–º —Ç–µ–º–ø–µ, –ø—Ä–∏–±–ª–∏–∂–∞—è—Å—å –∫ –∑–∞–≤–µ—Ç–Ω–æ–π —Å–æ—Ç–∫–µ! "
#         "–ê –∑–∞—Ç–µ–º –±–æ–ª—å—à–µ –∏ –±–æ–ª—å—à–µ, –∫—É—Ä—Å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω –∏–º–µ–Ω–Ω–æ –Ω–∞ —ç—Ç–æ!\n\n"
#         "üî• <b>–ú–æ–¥—É–ª–∏ –∫—É—Ä—Å–∞:</b>\n"
#         "‚Äî –í–≤–æ–¥–Ω—ã–π\n"
#         "‚Äî –í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ç–æ–≤–∞—Ä–Ω—ã–π –±–∏–∑–Ω–µ—Å\n"
#         "‚Äî –ú—ã—à–ª–µ–Ω–∏–µ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è\n"
#         "‚Äî –í—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞\n"
#         "‚Äî –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏\n"
#         "‚Äî –î—Ä–æ–ø—à–∏–ø–ø–∏–Ω–≥\n"
#         "‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –ê–≤–∏—Ç–æ-–º–∞–≥–∞–∑–∏–Ω–∞\n"
#         "‚Äî –ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π\n"
#         "‚Äî –ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏\n"
#         "‚Äî –ü—Ä–æ–¥–∞–∂–∏\n"
#         "‚Äî –õ–æ–≥–∏—Å—Ç–∏–∫–∞\n"
#         "‚Äî –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –Ω—é–∞–Ω—Å—ã\n"
#         "‚Äî –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
#         "‚Äî –ë–æ–Ω—É—Å: –û–ø—Ç–æ–≤—ã–µ –ø—Ä–æ–¥–∞–∂–∏ –≤ Telegram\n\n"
#         "üíé <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</b>\n"
#         "‚Äî –î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π —á–∞—Ç —Å —É—á–µ–Ω–∏–∫–∞–º–∏\n"
#         "‚Äî –ú–æ—è –ª–∏—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ —á–∞—Ç–µ\n\n"
#         "üí∏ <b>–¶–µ–Ω–∞:</b>\n"
#         "<s>25.000‚ÇΩ</s> <b>9.900‚ÇΩ</b>"
#     )
#     builder = InlineKeyboardBuilder()
#     builder.row(InlineKeyboardButton(text="–ó–∞–±—Ä–∞—Ç—å –ø–æ–ª–Ω—ã–π –∫—É—Ä—Å! üöÄ", url="https://t.me/Hogops"))
    
#     await callback.message.answer_photo(
#         photo=course_photo_id,
#         caption=text,
#         reply_markup=builder.as_markup(),
#         parse_mode="HTML"
#     )
#     await callback.answer()

# # ====================== –î–ê–ù–ù–´–ï –ö–ï–ô–°–û–í ======================
# CASES = [
#     {
#         'photo_id': 'AgACAgIAAxkBAAIBL2fTAm2eVTWvO2A8p97uATsJ7VexAALB8jEbEVCZSjzl_kgPbcHNAQADAgADeAADNgQ',
#         'text': (
#             "–ö–µ–π—Å –ò–≥–æ—Ä—è\n\n"
#             "–¢–æ—á–∫–∞ –ê: 0 —Ä—É–±–ª–µ–π\n"
#             "–¢–æ—á–∫–∞ –ë: 750,000 —Ä—É–±–ª–µ–π\n\n"
#             "–ò–≥–æ—Ä—å ‚Äî —Ç–µ–ø–µ—Ä—å –¥–ª—è –º–µ–Ω—è –±–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫, —Å –∫–æ—Ç–æ—Ä—ã–º —è –ø—Ä–æ–≤–æ–∂—É –ø–æ—á—Ç–∏ —Å–≤–æ–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, "
#             "—Ä–∞–Ω–µ–µ –±—ã–ª —É –º–µ–Ω—è –Ω–∞ –ø–æ—Ç–æ–∫–µ.\n\n"
#             "–í –ø–µ—Ä–≤—ã–µ 2 –Ω–µ–¥–µ–ª–∏ –æ–Ω –æ–∫—É–ø–∏–ª –ª–∏—á–Ω—É—é —Ä–∞–±–æ—Ç—É, –∞ –∑–∞ 2 –º–µ—Å—è—Ü–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–ª 750,000—Ä.\n\n"
#             "–ß—Ç–æ–± –≤—ã –ø–æ–Ω–∏–º–∞–ª–∏, –∫–æ–≥–¥–∞ –ò–≥–æ—Ä—å –∑–∞—Ö–æ–¥–∏–ª –∫–æ –º–Ω–µ –Ω–∞ –ª–∏—á–Ω—É—é —Ä–∞–±–æ—Ç—É ‚Äî –æ–Ω –¥–∞–∂–µ –Ω–µ –∑–Ω–∞–ª –∫–∞–∫ "
#             "–æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –∞–≤–∏—Ç–æ."
#         ),
#         'buttons': [
#             {'text': '–°–º–æ—Ç—Ä–µ—Ç—å –µ—â—ë', 'callback_data': 'next_case_1'},
#             {'text': '–°—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º', 'url': 'https://t.me/Hogops'}
#         ]
#     },
#     {
#         'photo_id': 'AgACAgIAAxkBAAIBMWfTAnZsw7Z1rPax1harGHFKQw0DAALD8jEbEVCZSjVZmW3bdpq_AQADAgADeQADNgQ',
#         'text': (
#             "–ö–µ–π—Å –§–µ–¥–∏\n\n"
#             "–¢–æ—á–∫–∞ –ê: 60,000 —Ä—É–±–ª–µ–π\n"
#             "–¢–æ—á–∫–∞ –ë: 300,000 —Ä—É–±–ª–µ–π\n\n"
#             "–û–î–ò–ù –ò–ó –õ–£–ß–®–ò–• –£–ß–ï–ù–ò–ö–û–í\n\n"
#             "–°–ø—Ä–æ—à—É –ª–∏—à—å: –ö–∞–∫ –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ 300,000—Ä –≤ –º–µ—Å—è—Ü –Ω–∞ —Ç–æ–≤–∞—Ä–Ω–æ–º –±–∏–∑–Ω–µ—Å–µ –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö "
#             "120,000-150,000—Ä –≤ –º–µ—Å—è—Ü –∏–¥—É—Ç —Å –ê–≤–∏—Ç–æ?\n\n"
#             "–†–∞–±–æ—Ç–∞–µ—à—å –∏ –≤–∫–ª–∞–¥—ã–≤–∞–µ—à—å—Å—è –≤–æ –≤—Ä–µ–º—è –º–æ–µ–≥–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–∞ ‚Äî –ø–æ–ª—É—á–∞–µ—à—å —Ç–æ–ª—å–∫–æ —Ç–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç."
#         ),
#         'video_id': 'BAACAgIAAxkBAAIBNWfTAzl87u8eawLzVmdDWTcB88NrAAKOcwACEVCZSu4bVwLtzwABaTYE',
#         'buttons': [
#             {'text': '–°–º–æ—Ç—Ä–µ—Ç—å –µ—â—ë', 'callback_data': 'next_case_2'},
#             {'text': '–°—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º', 'url': 'https://t.me/Hogops'}
#         ]
#     },
#     {
#         'photo_id': 'AgACAgIAAxkBAAIBM2fTAnrcKrJ9jwKGRQVmMkeXsMckAALE8jEbEVCZSrd29h501v3gAQADAgADeAADNgQ',
#         'text': (
#             "–ö–µ–π—Å –°–∞—à–∏\n\n"
#             "–¢–æ—á–∫–∞ –ê: 55,000 —Ä—É–±–ª–µ–π\n"
#             "–¢–æ—á–∫–∞ –ë: 120,000 —Ä—É–±–ª–µ–π\n\n"
#             "–ü—Ä–∏—à–µ–ª —Å –¥–æ—Ö–æ–¥–æ–º 50-60–∫\n"
#             "–°–µ–π—á–∞—Å –¥–µ–ª–∞–µ—Ç 120,000—Ä+\n\n"
#             "–¶–µ–ª—å –Ω–∞ –Ω–∞—Å—Ç–∞–≤–Ω–∏—Ç–µ–ª—å—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–∏–ª –∑–∞ –º–µ—Å—è—Ü)"
#         ),
#         'buttons': [
#             {'text': '–Ø –≥–æ—Ç–æ–≤, –ø–æ–≥–Ω–∞–ª–∏!', 'callback_data': 'view_full_course'}
#         ]
#     }
# ]


# @router.callback_query(F.data == "menu")
# async def menu_handler(callback: CallbackQuery):
#     builder = InlineKeyboardBuilder()
#     builder.button(text="–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ üîÑ", callback_data="restart_course")
#     builder.button(text="–í—ã–±—Ä–∞—Ç—å —É—Ä–æ–∫ üìö", callback_data="select_lesson")
#     await callback.message.answer("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=builder.as_markup())

# @router.callback_query(F.data == "restart_course")
# async def restart_course(callback: CallbackQuery, db: DatabaseHandler):
#     user_id = callback.from_user.id
#     await db.update_lesson(user_id, 1)
#     await send_lesson(callback.message, 1, db)
#     await callback.answer()